# rke-deployment/roles/rke_cluster/templates/cluster.yml.j2
# RKE Cluster Configuration
# Ref: https://rancher.com/docs/rke/latest/en/config-options/
nodes:
{% for host in groups['rke_masters'] %}
  - address: {{ hostvars[host]['ansible_host'] }}
    user: {{ ansible_user }}
    role:
      - etcd
      - controlplane
      - worker
    hostname_override: {{ host }}
    ssh_key_path: ~/.ssh/id_rsa # Ensure this key is available on the RKE CLI host
{% endfor %}
{% for host in groups['rke_workers'] %}
  - address: {{ hostvars[host]['ansible_host'] }}
    user: {{ ansible_user }}
    role:
      - worker
    hostname_override: {{ host }}
    ssh_key_path: ~/.ssh/id_rsa
{% endfor %}

cluster_name: {{ cluster_name }}
kubernetes_version: {{ kubernetes_version }}

# Network Plugin Configuration
network:
  plugin: {{ cluster_network_plugin }}
  {% if cluster_network_plugin == "flannel" %}
  flannel_cni_plugin: "flannel" # Use Flannel CNI plugin
  options:
    flannel_backend: "vxlan" # Recommended backend
  {% elif cluster_network_plugin == "calico" %}
  calico_network_provider: "calico" # Use Calico CNI plugin
  options:
    calico_ipv4pool_cidr: "{{ cluster_cluster_cidr }}"
    calico_node_container_runtime_config:
      cgroup_driver: "systemd" # Matches our Containerd/Docker config
  {% endif %}
  cluster_cidr: {{ cluster_cluster_cidr }}
  service_cluster_ip_range: {{ cluster_service_cidr }}

# DNS Provider (CoreDNS is default for RKE 2.5.x)
dns:
  provider: {{ cluster_dns_provider }}

# Ingress Controller (Nginx is default for RKE)
ingress:
  provider: "nginx"
  default_backend: true

# API Server Options
kubernetes_api_server:
  extra_args:
    bind-address: 0.0.0.0 # Listen on all interfaces
    # Add external load balancer IP if applicable
    advertise-address: "{{ cluster_api_server_url | regex_replace(':6443', '') }}" # This should be the LB IP
  extra_binds:
    - "0.0.0.0:6443:6443" # Expose on all interfaces

# Authentication (automatically generated by RKE, can specify cert_dir if needed)
authentication:
  strategy: x509

# Authorization (RBAC is default)
authorization:
  mode: rbac

# Etcd Snapshots (Recommended for production)
services:
  etcd:
    snapshot: true
    retention: 5 # Number of snapshots to keep
    creation: 6h0m0s # Create snapshot every 6 hours
    {% if load_balancer is defined %}
    s3_backup_config: # Optional: S3 compatible storage for etcd backups
      enabled: false # Set to true to enable S3 backup
      bucket_name: "your-etcd-backup-bucket"
      folder: "{{ cluster_name }}"
      region: "your-s3-region"
      access_key: "YOUR_S3_ACCESS_KEY"
      secret_key: "YOUR_S3_SECRET_KEY"
    {% endif %}

# Kubernetes Cloud Provider (empty if not using cloud)
cloud_provider: {}

# SSH Agent Auth (Optional: if using ssh-agent)
# ssh_agent_auth: false

# Private registries for pulling images
# private_registries:
#   - url: registry.yourdomain.com
#     user: registry_user
#     password: registry_password
#     is_default: true # If true, RKE uses this registry for all images

# Add any extra RKE arguments from group_vars
{% if rke_extra_args is defined %}
extra_args:
  {{ rke_extra_args | to_nice_yaml(indent=2) | indent(2) }}
{% endif %}